name: AI-Based Architecture Generator
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available

      - name: Extract code dependencies using JavaParser
        run: |
          curl -L https://github.com/javaparser/javaparser/releases/download/v3.24.1/javaparser-core-3.24.1.jar -o javaparser-core.jar
          # Use a script or tool that extracts class/method relationships from your Java code
          java -cp javaparser-core.jar com.github.javaparser.StaticJavaParser parse src/**/*.java > architecture.yaml
          
      # 3. Convert architecture.yaml (or similar output) into a PlantUML DFD
      - name: Generate DFD from architecture.yaml
        run: |
          # Example conversion step. This can be customized to parse the architecture.yaml and create a PlantUML file
          python3 generate_dfd_from_yaml.py architecture.yaml > dfd.puml

      # 4. Generate the DFD image using PlantUML
      - name: Generate DFD diagram using PlantUML
        run: |
          curl -L https://github.com/plantuml/plantuml/releases/download/v1.2023.5/plantumlt.1.2023.5.jar -o plantuml.jar
          java -jar plantuml.jar dfd.puml

      # 5. Upload the DFD image as an artifact
      - name: Upload DFD diagram as artifact
        uses: actions/upload-artifact@v4
        with:
          name: dfd-diagram
          path: dfd.png
