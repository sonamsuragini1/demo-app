name: AI-Based Architecture Generator
on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available

      - name: Extract file structure and code
        run: |
          sudo apt-get install tree -y
          tree -J -L 3 > structure.json
          find . -name "*.java" | xargs cat > all_java_code.txt

      - name: Generate architecture using OpenAI
        env:
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
        run: |
          REQUEST=$(jq -n --arg code "$(head -c 30000 all_java_code.txt)" --arg structure "$(cat structure.json)" '{
            "model": "gpt-4",
            "messages": [
              {"role": "system", "content": "You are a software architect."},
              {"role": "user", "content": "Based on this Java project structure and code, generate an architecture.md file and a PlantUML diagram inside code blocks.\n\nStructure:\n\($structure)\n\nCode:\n\($code)"}
            ]
          }')

          RESPONSE=$(curl -s -X POST https://api.openai.com/v1/chat/completions \
            -H "Authorization: Bearer $OPENAI_API_KEY" \
            -H "Content-Type: application/json" \
            -d "$REQUEST")

          echo "$RESPONSE" | jq -r '.choices[0].message.content' > ai_output.md

      - name: Debug:Show AI output
        run: cat ai_output.md

      - name: Extract diagram.puml from AI output
        run: |
          awk '/```plantuml/,/```/' ai_output.md | sed '1d;$d' > diagram.puml

      - name: Validate diagram or fallback
        run: |
          if ! grep -q "@startuml" diagram.puml; then
            echo "No valid PlantUML diagram found. Using fallback diagram."
            echo "@startuml" > diagram.puml
            echo "Alice -> Bob : Hello World" >> diagram.puml
            echo "@enduml" >> diagram.puml
          fi

      - name: Generate PNG from diagram
        run: |
          docker run --rm -v ${{ github.workspace }}:/workspace plantuml/plantuml diagram.puml

      - name: Upload architecture artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ai-architecture-output
          path: |
            ai_output.md
            diagram.puml
            diagram.png
